[{"title":"[AOC2]论如何干掉结盟","url":"/2023/01/25/NoOfferAlliance/","content":"找到getAllianceProposal_Positive方法在return v0语句前一段加入const/4 v0, 0x0\n然后再找到getAllianceProposal_Negative方法在return v0语句前加入const/4 v0, -0x8（这两个方法都在dioplmocyManager里）好了 现在结盟可能性这辈子都不可能是“高”了。什么？这两条语句什么意思？好 让我们先来聊聊老卢是怎么写结盟倾向的结盟倾向的分数获取分为两类方法 即getAllianceProposal_Positive（Negative）对应积极（消极）倾向。这个前缀下带有各种理由的分数 例如边界距离&#x2F;政体&#x2F;文明强度等我们上述的这两个方法就是结盟倾向积极与消极的总获取方法。const&#x2F;4 是一条smali的指令 可以简单的理解为向某个变量（其实应该是寄存器，但在这里我们采取更易于理解的方法）存储指定的数据。v0就是我们这个变量的名字 0x0和-0x8自然是我们要存入的内容。为什么要存到v0里？因为下一条语句 return v0的意思就是返回v0变量的值。那么 你可能还想要问 0x0和-0x8到底是啥？ 在这里 我们不细讲 简单的化成常规的数字形式 就是0和-8。如果你还想要深究，可以了解一下16进制。让我们把积极与消极的倾向加在一起：0+(-8)&#x3D;-8。负数 那么AI自然不会同意。如果你想让每次结盟都被同意，可以试试把这两个数值改成别的数字让结果一定是正数。嘿！如果有玩家用s和a切到别的国家强制同意结盟呢？我不想让玩家这么干！emmmm……当然 并不是没有办法。通过mt管理器的dex++编辑器，搜索（代码）rebuildInGame_OfferAlliance，然后进入Menu_InGame_CivInfo_Stats_Actions$8这个结果 按道理来说编辑器会自动帮你定位到这个目标。把定位到的这一行删掉就可以了。至于它的原理 自然非常简单：既然玩家可以发出结盟申请然后切过去同意，那我们不让玩家发出申请不就好了？没错，rebuildInGame_OfferAlliance就是启动结盟申请菜单的方法。 如果我们把这个方法删掉 在按下结盟申请按钮之后根本不会启动结盟申请菜单 自然发不出申请。但你必须要注意一点：删掉这个启动调用不会让AI结盟消失，第一种方法才能让AI结盟消失。毕竟，AI可不需要点开菜单然后按下同意。建议两个方法同时使用，毕竟谁都说不准玩家还能玩出什么花活。\n2023.1.31更新：我去 老卢你坑害我！！！前述方法并不能阻挡AI自主结盟。找到AI_Style类，搜索diplomacyActions_Ally方法，删除invoke-static &#123;v1, p1&#125;, Lage/of/civilizations2/jakowski/lukasz/DiplomacyManager;-&gt;sendAllianceProposal(II)V 语句，即可阻挡AI结盟。原因是AI自主结盟不通过倾向分数来运行，而是自行做了判断……sendAllianceProposal如果是两边AI应该会自动同意，玩家会弹窗 blalala我也懒得写了 就这样\n","categories":["aoc2"],"tags":["aoc2"]},{"title":"Re:Rainfall 序言","url":"/2023/05/12/ReRainfall-Prologue/","content":"你好。这是Re:Rainfall的序言。它将从一些例子开始，让你逐步学习smali并且掌握mod的技巧。笔者希望这个教程能够让新modder不只会复制粘贴，而是懂得如何使用smali乃至各类编程语言在文明时代二（或者，历史时代二）的世界中添加任何他们想要的。你应当准备这些工具：\n\nMT管理器\n百度、必应、搜狗等等搜索引擎最后，让笔者以 《Rainfall》 的介绍结束这段序言：  \n光影绸缪，暗夜倘仿。深渊之火镌刻答案，却于绵雨中雾散。《Rainfall》,the storm approaches.\n\n\n\n","categories":["Re:Rainfall"],"tags":["aoc2"]},{"title":"Re:Rainfall 从常量池出发","url":"/2023/05/12/ReRainfall-C1S1/","content":"Chapter 1,Section 1 - 从常量池出发在本节中，我们将学习最简单的修改：修改常量值。再次检查一下：序言中所述的工具你准备好了吗？打开安装包内的dex，选中常量，你应当会看到一个由大量字符串组成的列表。先别被这列表吓坏了：MT管理器只是将所有const-string（注：一个smali指令，作用是向寄存器存储指定字符串。）的赋值全部提取出来而已。让我们先来试试些小玩意：点击过滤，搜索”Lukasz Jakowski Games”，点击—然后就会出现一个输入框。修改成任何你想要的字符串。（注：如果你找不到这个字符串的话，你有可能使用的不是原版dex。不要使用新系统，它们修改了卢卡斯的作者信息。）重新安装，进入游戏，如果一切顺利的话你会在加载界面的右下角看到你修改的结果！（注：鉴于charset问题，使用非英语有概率吞字）好了，你的第一次修改算是大功告成了。\n","categories":["Re:Rainfall"],"tags":["aoc2"]},{"title":"[AOC2]剥削百姓，我抢我自己！","url":"/2023/02/04/SelfPlunder/","content":"本文将简单阐述如何让自己的本土省份变得可以劫掠。首先，我们先来看看在本土掠夺有什么阻碍。第一，我们是点不了掠夺这个按钮的—会提示这不是占领而是本土省份。与这个按钮相关的类笔者已经找好了，在Menu_InGame_Build$27。切换到getClickable（获取可点击元素）方法，在末尾return x（这里x是寄存器，例如v0&#x2F;v1）前添加 const x,0x1即可。这里牵扯到smali对于布尔值（这种数据类型只有true&#x2F;false&#x2F;null，可以称之为编程中的二极管）的处理：true变为1，false变为0。所以，这里我们实际上是让这个方法永远返回true。现在进入游戏，你应该会发现原本点下去没有效果的掠夺按钮（在省份的更多里）现在会出现掠夺菜单了！不过，点下掠夺仍然不会让掠夺发生。再跳转到DiplomacyManager类，我们会发现有两个方法：plunder和plunderProvince。我们都需要进行更改。先说plunder。跳转到这个方法，我们可以看到开头出现了一个if语句。如果这个if语句判断为false，就不会执行掠夺相关的语句。直接修改寄存器过于困难（之后的代码还需要用到这个参数，如果贸然修改可能出现各类问题），因此我们这里选择goto跳转。找到if-eqz后面的cond标签（例如:cond_a），记住它。找到这一个cond标签，在它上一行（如果已经有指令了就添加）输入:goto_x（x可自行替换）接下来，在if-eqz指令下方添加goto :goto_x（跟上一个goto_x保持一致）即可。接下来是plunderProvince。搜索isoccupied，我们会看到一个对该方法的调用。在这个方法的返回值被移动到指定寄存器（move-result）之后，将这个寄存器设定为0x1（true）即可。此时进入游戏，应该已经可以我掠夺我自己了。\n","tags":["aoc2"]},{"title":"Re:Rainfall 移除快板曲，全mod都高兴","url":"/2023/05/12/ReRainfall-C1S2/","content":"Section 2 - 移除快板曲，全mod都高兴在上一节中，我们已经简单了解了最基本的修改。现在，是时候向smali出发了。\n\n简单介绍一下Smali：这种语言是dex中机器语言（注：实际上是dalvik字节码）的一种转换形式，更加方便人阅读以及修改。它还有一个配套的软件，称作Baksmali，可以用它来反编译dex。    \n\n如果你在阅读Re:Rainfall之前对mod已稍有了解甚至于实践，你应该听说过Impact_allegretto.ogg的大名。没听过？没有关系，笔者稍作解释：它是原版文二当中的开始音乐，每次打开游戏都会先自动播放这个音频。有modder尝试添加其他音乐，结果把Impact_allegretto.ogg给删了—此时，他们就会奇怪：我去，怎么没声了？然而在设置中的音频菜单仍然可以播放其他音频。为什么会出现这种情况？打开dex，我们需要借助另外一个强大的工具：搜索。点击开始新搜索，目标选择“类”（注：类是代码的“容器”，所有代码都应当被放在一个类中），接着在搜索内容中键入Sound（注：“声音”的英语）。你应当可以看到有多个类出现，例如：SoundManager,SoundManager$1,SoundManager$2……后面这些带着“$”符号的，我们称它们为$前这个类的“子类”。在java代码中其实没有这些子类的文件存在，但在编译时为了处理类中的匿名类和被声明的子类，会生成这些新文件。点开SoundManager，这才是文二里声音的管理器（注：这里涉及到java的设计模式，本教程并不详细叙述。Manager，即管理器，通常是某个模块&#x2F;功能的中枢）。点开右上角的指南针，你应当会看到这个类值和方法的列表：值为黄色，方法为红色。翻译一下这些方法和值的名字，我们可以看到一个方法的名字显得尤为突出：“PlayStartMusic”，即“播放开始音乐”。转向这个方法，一段熟悉的字符串将会映入我们的眼帘。没错，就是“Impact_allegretto.ogg”。或者完整一点，“music&#x2F;Impact_allegretto.ogg”。把这个用双引号包裹的字符串里的内容稍作修改，你就可以更改起始音乐了。例如，现在我们想把起始音乐改为“Start.ogg”，存放在music文件夹下（这里省略了前面的assets&#x2F;game），那么就要改成：“music&#x2F;Start.ogg”。假设一切顺利，打开游戏你应该就能听到你选的高雅（划）乐曲了。\n\nWIP -\n\n","categories":["Re:Rainfall"],"tags":["aoc2"]}]